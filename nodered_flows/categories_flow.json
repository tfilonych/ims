[
    {
        "id": "ae5ec3561019ee27",
        "type": "tab",
        "label": "Categories flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "94df8e52a7d4eea2",
        "type": "http in",
        "z": "ae5ec3561019ee27",
        "name": "get/categories",
        "url": "/categories",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5a179dd3a7cddc5b"
            ]
        ]
    },
    {
        "id": "168e15775379df67",
        "type": "http response",
        "z": "ae5ec3561019ee27",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "3c3a93e28d1a0cc0",
        "type": "http in",
        "z": "ae5ec3561019ee27",
        "name": "create/category",
        "url": "/categories",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "14200b4588718147"
            ]
        ]
    },
    {
        "id": "6f3940b3e6bc7fcb",
        "type": "http response",
        "z": "ae5ec3561019ee27",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "14200b4588718147",
        "type": "function",
        "z": "ae5ec3561019ee27",
        "name": "Prepare Payload",
        "func": "msg.payload = {\n    name: msg.payload.name\n};\ndelete msg.req.body.id;  // delete temporary id\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "0bbea4ce8b40665c"
            ]
        ]
    },
    {
        "id": "f83da864558f5537",
        "type": "http in",
        "z": "ae5ec3561019ee27",
        "name": "update/category",
        "url": "/categories/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "018d7eb93bfa79c2"
            ]
        ]
    },
    {
        "id": "254bc8c28813f281",
        "type": "http response",
        "z": "ae5ec3561019ee27",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "6aa47622ccf21386",
        "type": "http in",
        "z": "ae5ec3561019ee27",
        "name": "delete/category",
        "url": "/categories/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "63b2fc03f4209e42"
            ]
        ]
    },
    {
        "id": "908c3f78c0ed583b",
        "type": "http response",
        "z": "ae5ec3561019ee27",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 400,
        "wires": []
    },
    {
        "id": "63b2fc03f4209e42",
        "type": "function",
        "z": "ae5ec3561019ee27",
        "name": "Prepare Payload",
        "func": "msg.payload = {\n    _id: msg.req.params.id\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "67c90f69429c371a"
            ]
        ]
    },
    {
        "id": "c0d896e24c87827a",
        "type": "function",
        "z": "ae5ec3561019ee27",
        "name": "Process Result",
        "func": "const insertedId = msg.payload.insertedId;\n\nif (insertedId) {\n    msg.payload = {\n        ...msg.req.body,\n        id: insertedId\n    };\n} else {\n    msg.payload = { error: 'Failed to insert category' };\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "6f3940b3e6bc7fcb"
            ]
        ]
    },
    {
        "id": "0bbea4ce8b40665c",
        "type": "mongodb4",
        "z": "ae5ec3561019ee27",
        "clientNode": "c690ab1055bd4bc6",
        "mode": "collection",
        "collection": "categories",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "StoreDB categories",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "c0d896e24c87827a"
            ]
        ]
    },
    {
        "id": "67c90f69429c371a",
        "type": "mongodb4",
        "z": "ae5ec3561019ee27",
        "clientNode": "c690ab1055bd4bc6",
        "mode": "collection",
        "collection": "categories",
        "operation": "deleteOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "StoreDB categories",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "908c3f78c0ed583b"
            ]
        ]
    },
    {
        "id": "5a179dd3a7cddc5b",
        "type": "mongodb4",
        "z": "ae5ec3561019ee27",
        "clientNode": "c690ab1055bd4bc6",
        "mode": "collection",
        "collection": "categories",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "StoreDB categories",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "291e9d34fda3c541"
            ]
        ]
    },
    {
        "id": "291e9d34fda3c541",
        "type": "function",
        "z": "ae5ec3561019ee27",
        "name": "Process Result",
        "func": "if (!Array.isArray(msg.payload)) {\n    msg.payload = [];\n    return msg;\n}\n\nif (msg.payload.length === 0) {\n    return msg;\n}\n\nmsg.payload = msg.payload.map(item => {\n    item.id = item._id;\n    delete item._id;\n    return item;\n});\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "168e15775379df67"
            ]
        ]
    },
    {
        "id": "018d7eb93bfa79c2",
        "type": "function",
        "z": "ae5ec3561019ee27",
        "name": "Prepare Payload",
        "func": "\nmsg.payload = [\n { \"_id\": msg.req.params.id },\n    // Setting the \"status\" field of the identified document to the new value received from msg.payload.status\n { \"$set\": { ...msg.req.body } }\n]\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 300,
        "y": 260,
        "wires": [
            [
                "a50d0d5d85f56b32"
            ]
        ]
    },
    {
        "id": "a50d0d5d85f56b32",
        "type": "mongodb4",
        "z": "ae5ec3561019ee27",
        "clientNode": "c690ab1055bd4bc6",
        "mode": "collection",
        "collection": "categories",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "StoreDB categories",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "66eb22dfadf03d72"
            ]
        ]
    },
    {
        "id": "66eb22dfadf03d72",
        "type": "function",
        "z": "ae5ec3561019ee27",
        "name": "Process Result",
        "func": "msg.payload = {\n    ...msg.req.body,\n    id: msg.req.params.id\n}\n      \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 260,
        "wires": [
            [
                "254bc8c28813f281"
            ]
        ]
    },
    {
        "id": "c690ab1055bd4bc6",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb+srv",
        "hostname": "cluster0.6xdakl7.mongodb.net",
        "port": "",
        "dbName": "ims",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "mongodb+srv://tivato:123456kycja@cluster0.6xdakl7.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
        "advanced": "{}",
        "uriTabActive": "tab-uri-advanced"
    }
]